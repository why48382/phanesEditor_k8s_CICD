name: front project deployment
on:
  push:
    branches: ["main"]
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      - run: npm i
      - run: npm run build --if-present
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/phanes-front-k8s:${{ github.run_number }}

  deploy:
    name: deploy
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: run ssh
        uses: appleboy/ssh-action@v1
        with:
          host: 175.197.41.119
          username: deploy
          password: ${{ secrets.SSH_PASSWORD }}
          port: 222
          script: |
            if kubectl get svc phanes-front-svc -n lhs -o wide | grep -q "green"; then
              CURRENT_VER="green"
              NEXT_VER="blue"
            else
              CURRENT_VER="blue"
              NEXT_VER="green"
            fi

            cat <<EOF | kubectl apply -f -
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: phanes-front-deployment-${NEXT_VER}
              namespace: lhs
            spec:
              selector:
                matchLabels:
                  type: front
                  ver: ${NEXT_VER}
              replicas: 1
              strategy:
                type: RollingUpdate
              template:
                metadata:
                  labels:
                    type: front
                    ver: ${NEXT_VER}
                spec:
                  containers:
                    - name: container
                      image: why48382/phanes-front-k8s:${{ github.run_number }}
                      livenessProbe:
                        httpGet:
                          path: /health
                          port: 80
                        initialDelaySeconds: 20
                        periodSeconds: 10
                      readinessProbe:
                        httpGet:
                          path: /test
                          port: 80
                        initialDelaySeconds: 20
                        periodSeconds: 10
                        successThreshold: 3
                  terminationGracePeriodSeconds: 0
            EOF

            kubectl rollout status deployment/phanes-front-deployment-${NEXT_VER} -lhs

            cat <<EOF | kubectl apply -f -
            apiVersion: v1
            kind: Service
            metadata:
              name: phanes-front-svc
              namespace: lhs
            spec:
              selector:
                type: front
                ver: ${NEXT_VER}
              ports:
                - port: 80
                  targetPort: 80
              type: LoadBalancer
            EOF

            kubectl scale deployment phanes-front-deployment-${CURRENT_VER} -n lhs --replicas=0